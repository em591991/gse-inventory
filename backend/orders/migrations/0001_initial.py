# Generated by Django 5.2.7 on 2025-10-20 13:55

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('inventory', '0002_initial'),
        ('jobs', '0001_initial'),
        ('vendors', '0001_initial'),
        ('workorders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_type', models.CharField(choices=[('PURCHASE', 'Purchase Order'), ('SALES', 'Sales Order'), ('TRANSFER', 'Transfer'), ('RETURN', 'Return'), ('RMA', 'RMA'), ('ADJUSTMENT', 'Adjustment')], max_length=20)),
                ('order_status', models.CharField(choices=[('DRAFT', 'Draft'), ('OPEN', 'Open'), ('PARTIAL', 'Partial'), ('CLOSED', 'Closed'), ('CANCELED', 'Canceled')], default='DRAFT', max_length=20)),
                ('ordered_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='customers.customer')),
                ('from_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders_from', to='inventory.location')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='jobs.job')),
                ('to_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders_to', to='inventory.location')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='vendors.vendor')),
                ('work_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='workorders.workorder')),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrderInfo',
            fields=[
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='sales_info', serialize=False, to='orders.order')),
                ('ship_to_name', models.CharField(blank=True, max_length=255, null=True)),
                ('ship_to_address', models.CharField(blank=True, max_length=500, null=True)),
                ('ship_to_city', models.CharField(blank=True, max_length=200, null=True)),
                ('ship_to_state', models.CharField(blank=True, max_length=100, null=True)),
                ('ship_to_postal', models.CharField(blank=True, max_length=40, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=320, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderLine',
            fields=[
                ('order_line_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('line_no', models.IntegerField()),
                ('purchase_category', models.CharField(choices=[('MATERIAL', 'Material'), ('TOOL', 'Tool'), ('EQUIPMENT', 'Equipment'), ('VEHICLE', 'Vehicle'), ('SERVICE', 'Service'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('qty', models.DecimalField(decimal_places=4, max_digits=14)),
                ('price_each', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('g_code', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('from_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderlines_from', to='inventory.bin')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_lines', to='inventory.item')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='orders.order')),
                ('to_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderlines_to', to='inventory.bin')),
                ('uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_lines', to='inventory.unitofmeasure')),
            ],
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_type', 'order_status'], name='idx_orders_type_status'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['work_order'], name='idx_orders_wo'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['job'], name='idx_orders_job'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer'], name='idx_orders_customer'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['vendor'], name='idx_orders_vendor'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['from_location'], name='idx_orders_from_loc'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['to_location'], name='idx_orders_to_loc'),
        ),
        migrations.AddIndex(
            model_name='orderline',
            index=models.Index(fields=['order', 'line_no'], name='uq_order_line_no'),
        ),
        migrations.AddIndex(
            model_name='orderline',
            index=models.Index(fields=['item'], name='idx_ol_item'),
        ),
        migrations.AlterUniqueTogether(
            name='orderline',
            unique_together={('order', 'line_no')},
        ),
    ]
