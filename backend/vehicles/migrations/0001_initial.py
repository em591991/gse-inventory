# Generated by Django 5.2.7 on 2025-10-21 00:48

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employees', '0001_initial'),
        ('inventory', '0001_initial'),
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vin', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('plate_no', models.CharField(blank=True, max_length=32)),
                ('unit_no', models.CharField(blank=True, default='', max_length=50)),
                ('purchased_at', models.DateField(blank=True, null=True)),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('IN_SERVICE', 'In Service'), ('MAINTENANCE', 'Maintenance'), ('OUT_OF_SERVICE', 'Out of Service'), ('RETIRED', 'Retired')], max_length=20)),
                ('current_odometer', models.IntegerField(blank=True, null=True)),
                ('registration_expires_at', models.DateField(blank=True, null=True)),
                ('insurance_expires_at', models.DateField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=500)),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='inventory.location')),
            ],
            options={
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehicleServiceSchedule',
            fields=[
                ('vehicle', models.OneToOneField(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='service_schedule', serialize=False, to='vehicles.vehicle')),
                ('service_interval_days', models.IntegerField(blank=True, null=True)),
                ('service_interval_miles', models.IntegerField(blank=True, null=True)),
                ('last_serviced_at', models.DateTimeField(blank=True, null=True)),
                ('last_service_odometer', models.IntegerField(blank=True, null=True)),
                ('next_due_at', models.DateTimeField(blank=True, null=True)),
                ('next_due_odometer', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vehicle_service_schedule',
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('vehicle_model_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('make', models.CharField(max_length=120)),
                ('model', models.CharField(max_length=120)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'vehicle_models',
                'indexes': [models.Index(fields=['make', 'model', 'year'], name='idx_vehicle_model_lookup')],
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_model',
            field=models.ForeignKey(db_column='vehicle_model_id', on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='vehicles.vehiclemodel'),
        ),
        migrations.CreateModel(
            name='VehicleProcurement',
            fields=[
                ('vehicle', models.OneToOneField(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='procurement', serialize=False, to='vehicles.vehicle')),
                ('received_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_procurements', to='orders.order')),
                ('order_line', models.ForeignKey(db_column='order_line_id', on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_procurements', to='orders.orderline')),
            ],
            options={
                'db_table': 'vehicle_procurements',
            },
        ),
        migrations.CreateModel(
            name='VehicleAssignment',
            fields=[
                ('vehicle_assignment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.CharField(blank=True, max_length=500)),
                ('employee', models.ForeignKey(blank=True, db_column='employee_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_assignments', to='employees.employee')),
                ('location', models.ForeignKey(blank=True, db_column='location_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_assignments', to='inventory.location')),
                ('vehicle', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'vehicle_assignments',
                'indexes': [models.Index(fields=['vehicle'], name='idx_va_vehicle'), models.Index(fields=['employee'], name='idx_va_emp'), models.Index(fields=['location'], name='idx_va_loc'), models.Index(fields=['vehicle', 'end_at'], name='idx_va_active_picker')],
            },
        ),
        migrations.CreateModel(
            name='VehicleMaintenance',
            fields=[
                ('vehicle_maintenance_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('performed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('OIL_CHANGE', 'Oil Change'), ('TIRE_ROTATION', 'Tire Rotation'), ('INSPECTION', 'Inspection'), ('REPAIR', 'Repair'), ('OTHER', 'Other')], max_length=20)),
                ('notes', models.CharField(blank=True, max_length=500)),
                ('next_due_at', models.DateTimeField(blank=True, null=True)),
                ('odometer_reading', models.IntegerField(blank=True, null=True)),
                ('performed_by_employee', models.ForeignKey(blank=True, db_column='performed_by_employee_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_maintenance_performed', to='employees.employee')),
                ('vehicle', models.ForeignKey(db_column='vehicle_id', on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'vehicle_maintenance',
                'indexes': [models.Index(fields=['vehicle'], name='idx_vm_vehicle')],
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['vehicle_model'], name='idx_vehicle_model'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['location'], name='idx_vehicle_location'),
        ),
        migrations.AddIndex(
            model_name='vehicleprocurement',
            index=models.Index(fields=['order', 'order_line'], name='idx_vehicle_po_line'),
        ),
    ]
