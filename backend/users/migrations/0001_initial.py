# Generated by Django 5.2.7 on 2025-10-20 16:53

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('departments', '0002_initial'),
        ('employees', '0001_initial'),
        ('inventory', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('permission_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('resource', models.CharField(max_length=80)),
                ('action', models.CharField(max_length=40)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'permissions',
                'indexes': [models.Index(fields=['name'], name='uq_perm_name'), models.Index(fields=['resource', 'action'], name='idx_perm_resource_action')],
                'constraints': [models.UniqueConstraint(fields=('resource', 'action'), name='uq_permission_resource_action')],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('role_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('ADMIN', 'Admin'), ('MANAGER', 'Manager'), ('WAREHOUSE', 'Warehouse'), ('SALES', 'Sales'), ('VIEWER', 'Viewer')], max_length=80, unique=True)),
                ('description', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'db_table': 'roles',
                'indexes': [models.Index(fields=['name'], name='uq_role_name')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=320, unique=True)),
                ('display_name', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INVITED', 'Invited'), ('DISABLED', 'Disabled')], default='INVITED', max_length=20)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('employee', models.ForeignKey(blank=True, db_column='employee_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_accounts', to='employees.employee')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='OAuthIdentity',
            fields=[
                ('identity_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(max_length=80)),
                ('provider_user_id', models.CharField(max_length=255)),
                ('provider_email', models.EmailField(blank=True, max_length=320)),
                ('linked_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='oauth_identities', to='users.user')),
            ],
            options={
                'db_table': 'oauth_identities',
            },
        ),
        migrations.CreateModel(
            name='UserDepartmentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(db_column='department_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_access', to='departments.department')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='department_access', to='users.user')),
            ],
            options={
                'db_table': 'user_department_access',
            },
        ),
        migrations.CreateModel(
            name='UserLocationAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, related_name='user_access', to='inventory.location')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='location_access', to='users.user')),
            ],
            options={
                'db_table': 'user_location_access',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='users.role')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='users.user')),
            ],
            options={
                'db_table': 'user_roles',
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(db_column='permission_id', on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='users.permission')),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='users.role')),
            ],
            options={
                'db_table': 'role_permissions',
                'indexes': [models.Index(fields=['role'], name='idx_role_perm_role'), models.Index(fields=['permission'], name='idx_role_perm_perm')],
                'constraints': [models.UniqueConstraint(fields=('role', 'permission'), name='pk_role_perm')],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='uq_users_email'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['employee'], name='idx_users_employee'),
        ),
        migrations.AddIndex(
            model_name='oauthidentity',
            index=models.Index(fields=['user'], name='idx_oauth_user'),
        ),
        migrations.AddIndex(
            model_name='oauthidentity',
            index=models.Index(fields=['provider', 'provider_user_id'], name='idx_oauth_lookup'),
        ),
        migrations.AddConstraint(
            model_name='oauthidentity',
            constraint=models.UniqueConstraint(fields=('provider', 'provider_user_id'), name='uq_oauth_provider_user'),
        ),
        migrations.AddIndex(
            model_name='userdepartmentaccess',
            index=models.Index(fields=['user'], name='idx_user_dept_user'),
        ),
        migrations.AddIndex(
            model_name='userdepartmentaccess',
            index=models.Index(fields=['department'], name='idx_user_dept_department'),
        ),
        migrations.AddConstraint(
            model_name='userdepartmentaccess',
            constraint=models.UniqueConstraint(fields=('user', 'department'), name='pk_user_dept'),
        ),
        migrations.AddIndex(
            model_name='userlocationaccess',
            index=models.Index(fields=['user'], name='idx_user_loc_user'),
        ),
        migrations.AddIndex(
            model_name='userlocationaccess',
            index=models.Index(fields=['location'], name='idx_user_loc_location'),
        ),
        migrations.AddConstraint(
            model_name='userlocationaccess',
            constraint=models.UniqueConstraint(fields=('user', 'location'), name='pk_user_loc'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user'], name='idx_user_role_user'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['role'], name='idx_user_role_role'),
        ),
        migrations.AddConstraint(
            model_name='userrole',
            constraint=models.UniqueConstraint(fields=('user', 'role'), name='pk_user_role'),
        ),
    ]
