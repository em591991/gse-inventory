# Generated by Django 5.2.7 on 2025-10-25 21:39

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=4, max_digits=14)),
                ('moved_at', models.DateTimeField(auto_now_add=True)),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Cost per unit at time of movement', max_digits=12, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Total cost (qty Ã— unit_cost)', max_digits=14, null=True)),
                ('is_estimated', models.BooleanField(default=False, help_text='True if cost is estimated (from pending allocation)')),
                ('actual_cost_variance', models.DecimalField(blank=True, decimal_places=4, help_text='Difference between estimated and actual cost', max_digits=14, null=True)),
                ('reference', models.CharField(blank=True, help_text='Reference code or identifier', max_length=100)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'verbose_name': 'Inventory Movement',
                'verbose_name_plural': 'Inventory Movements',
                'db_table': 'inventory_movements',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=255)),
                ('g_code', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=500, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=500, null=True)),
                ('manufacturer_part_no', models.CharField(blank=True, max_length=500, null=True)),
                ('current_replacement_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Latest purchase price for quoting new jobs', max_digits=12, null=True)),
                ('last_cost_update', models.DateTimeField(blank=True, help_text='When cost was last updated', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemDefaultBin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ItemLocationPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('max_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('reorder_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('lead_time_days', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Item Location Policy',
                'verbose_name_plural': 'Item Location Policies',
            },
        ),
        migrations.CreateModel(
            name='PendingAllocation',
            fields=[
                ('pending_allocation_id', models.UUIDField(db_column='pending_allocation_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qty', models.DecimalField(decimal_places=4, help_text='Quantity pending fulfillment', max_digits=14)),
                ('estimated_unit_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Estimated cost (from last purchase)', max_digits=12, null=True)),
                ('estimated_total_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Estimated total cost', max_digits=14, null=True)),
                ('status', models.CharField(choices=[('AWAITING_RECEIPT', 'Awaiting Receipt'), ('PARTIALLY_FULFILLED', 'Partially Fulfilled'), ('FULFILLED', 'Fulfilled'), ('CANCELED', 'Canceled')], db_column='status', default='AWAITING_RECEIPT', max_length=20)),
                ('created_at', models.DateTimeField(db_column='created_at', default=django.utils.timezone.now)),
                ('fulfilled_at', models.DateTimeField(blank=True, db_column='fulfilled_at', null=True)),
                ('notes', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Pending Allocation',
                'verbose_name_plural': 'Pending Allocations',
                'db_table': 'pending_allocations',
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('uom_code', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Units of Measure',
            },
        ),
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('bin_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bin_code', models.CharField(max_length=64)),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, related_name='bins', to='locations.location')),
            ],
            options={
                'db_table': 'bins',
            },
        ),
        migrations.CreateModel(
            name='InventoryLayer',
            fields=[
                ('layer_id', models.UUIDField(db_column='layer_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qty_remaining', models.DecimalField(decimal_places=4, help_text='Quantity still available in this layer', max_digits=14)),
                ('unit_cost', models.DecimalField(decimal_places=4, help_text='Cost per unit for this layer', max_digits=12)),
                ('received_at', models.DateTimeField(db_column='received_at', default=django.utils.timezone.now, help_text='When this inventory was received')),
                ('reference', models.CharField(blank=True, help_text='Reference for manual adjustments or notes', max_length=100)),
                ('bin', models.ForeignKey(blank=True, db_column='bin_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_layers', to='inventory.bin')),
                ('location', models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, related_name='inventory_layers', to='locations.location')),
            ],
            options={
                'verbose_name': 'Inventory Layer',
                'verbose_name_plural': 'Inventory Layers',
                'db_table': 'inventory_layers',
                'ordering': ['received_at'],
            },
        ),
    ]
