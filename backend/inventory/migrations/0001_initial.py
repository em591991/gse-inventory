# Generated by Django 5.2.7 on 2025-10-19 00:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vendors', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('uom_code', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Units of Measure',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('WAREHOUSE', 'Warehouse'), ('TRUCK', 'Truck'), ('JOB', 'Jobsite'), ('STORAGE', 'Storage')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name', 'type'], name='idx_locations_name_type')],
            },
        ),
        migrations.CreateModel(
            name='Bin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bin_code', models.CharField(max_length=64)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bins', to='inventory.location')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('sku', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('default_uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='default_items', to='inventory.unitofmeasure')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=4, max_digits=14)),
                ('moved_at', models.DateTimeField(auto_now_add=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('from_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outgoing_bin_movements', to='inventory.bin')),
                ('to_bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_bin_movements', to='inventory.bin')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
                ('from_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='outgoing_movements', to='inventory.location')),
                ('to_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incoming_movements', to='inventory.location')),
                ('uom', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.unitofmeasure')),
            ],
            options={
                'verbose_name': 'Inventory Movement',
                'verbose_name_plural': 'Inventory Movements',
            },
        ),
        migrations.CreateModel(
            name='VendorItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_sku', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('conversion_factor', models.DecimalField(decimal_places=4, default=1.0, max_digits=10)),
                ('lead_time_days', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_items', to='inventory.item')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_items', to='vendors.vendor')),
                ('vendor_uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.unitofmeasure')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='vendors',
            field=models.ManyToManyField(related_name='items', through='inventory.VendorItem', to='vendors.vendor'),
        ),
        migrations.CreateModel(
            name='ItemLocationPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('max_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('reorder_qty', models.DecimalField(blank=True, decimal_places=4, max_digits=14, null=True)),
                ('lead_time_days', models.IntegerField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
                ('preferred_vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_policies', to='vendors.vendor')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
            ],
            options={
                'verbose_name': 'Item Location Policy',
                'verbose_name_plural': 'Item Location Policies',
                'indexes': [models.Index(fields=['item', 'location'], name='pk_item_loc_policies'), models.Index(fields=['preferred_vendor'], name='idx_ilp_vendor')],
                'unique_together': {('item', 'location')},
            },
        ),
        migrations.CreateModel(
            name='ItemDefaultBin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.bin')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.location')),
            ],
            options={
                'indexes': [models.Index(fields=['item', 'location'], name='pk_item_default_bin')],
                'unique_together': {('item', 'location')},
            },
        ),
        migrations.AddIndex(
            model_name='bin',
            index=models.Index(fields=['location', 'bin_code'], name='uq_bins_per_location'),
        ),
        migrations.AlterUniqueTogether(
            name='bin',
            unique_together={('location', 'bin_code')},
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['item'], name='idx_mov_item'),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['moved_at'], name='idx_mov_time'),
        ),
        migrations.AlterUniqueTogether(
            name='vendoritem',
            unique_together={('vendor', 'item')},
        ),
    ]
