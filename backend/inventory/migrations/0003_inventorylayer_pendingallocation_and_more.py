# Generated by Django 5.2.7 on 2025-10-22 22:50

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_initial'),
        ('jobs', '0002_workorder'),
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryLayer',
            fields=[
                ('layer_id', models.UUIDField(db_column='layer_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qty_remaining', models.DecimalField(decimal_places=4, help_text='Quantity still available in this layer', max_digits=14)),
                ('unit_cost', models.DecimalField(decimal_places=4, help_text='Cost per unit for this layer', max_digits=12)),
                ('received_at', models.DateTimeField(db_column='received_at', default=django.utils.timezone.now, help_text='When this inventory was received')),
                ('reference', models.CharField(blank=True, help_text='Reference for manual adjustments or notes', max_length=100)),
            ],
            options={
                'verbose_name': 'Inventory Layer',
                'verbose_name_plural': 'Inventory Layers',
                'db_table': 'inventory_layers',
                'ordering': ['received_at'],
            },
        ),
        migrations.CreateModel(
            name='PendingAllocation',
            fields=[
                ('pending_allocation_id', models.UUIDField(db_column='pending_allocation_id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qty', models.DecimalField(decimal_places=4, help_text='Quantity pending fulfillment', max_digits=14)),
                ('estimated_unit_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Estimated cost (from last purchase)', max_digits=12, null=True)),
                ('estimated_total_cost', models.DecimalField(blank=True, decimal_places=4, help_text='Estimated total cost', max_digits=14, null=True)),
                ('status', models.CharField(choices=[('AWAITING_RECEIPT', 'Awaiting Receipt'), ('PARTIALLY_FULFILLED', 'Partially Fulfilled'), ('FULFILLED', 'Fulfilled'), ('CANCELED', 'Canceled')], db_column='status', default='AWAITING_RECEIPT', max_length=20)),
                ('created_at', models.DateTimeField(db_column='created_at', default=django.utils.timezone.now)),
                ('fulfilled_at', models.DateTimeField(blank=True, db_column='fulfilled_at', null=True)),
                ('notes', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'Pending Allocation',
                'verbose_name_plural': 'Pending Allocations',
                'db_table': 'pending_allocations',
            },
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='actual_cost_variance',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Difference between estimated and actual cost', max_digits=14, null=True),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='is_estimated',
            field=models.BooleanField(default=False, help_text='True if cost is estimated (from pending allocation)'),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='total_cost',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Total cost (qty Ã— unit_cost)', max_digits=14, null=True),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='unit_cost',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Cost per unit at time of movement', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='inventorymovement',
            name='work_order',
            field=models.ForeignKey(blank=True, db_column='work_order_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_movements', to='jobs.workorder'),
        ),
        migrations.AddField(
            model_name='item',
            name='current_replacement_cost',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Latest purchase price for quoting new jobs', max_digits=12, null=True),
        ),
        migrations.AddField(
            model_name='item',
            name='last_cost_update',
            field=models.DateTimeField(blank=True, help_text='When cost was last updated', null=True),
        ),
        migrations.AddIndex(
            model_name='inventorymovement',
            index=models.Index(fields=['work_order', 'total_cost'], name='idx_mov_work_order_cost'),
        ),
        migrations.AlterModelTable(
            name='inventorymovement',
            table='inventory_movements',
        ),
        migrations.AddField(
            model_name='inventorylayer',
            name='bin',
            field=models.ForeignKey(blank=True, db_column='bin_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_layers', to='inventory.bin'),
        ),
        migrations.AddField(
            model_name='inventorylayer',
            name='item',
            field=models.ForeignKey(db_column='item_id', on_delete=django.db.models.deletion.CASCADE, related_name='inventory_layers', to='inventory.item'),
        ),
        migrations.AddField(
            model_name='inventorylayer',
            name='location',
            field=models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, related_name='inventory_layers', to='inventory.location'),
        ),
        migrations.AddField(
            model_name='inventorylayer',
            name='purchase_order',
            field=models.ForeignKey(blank=True, db_column='purchase_order_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_layers', to='orders.order'),
        ),
        migrations.AddField(
            model_name='pendingallocation',
            name='item',
            field=models.ForeignKey(db_column='item_id', on_delete=django.db.models.deletion.CASCADE, related_name='pending_allocations', to='inventory.item'),
        ),
        migrations.AddField(
            model_name='pendingallocation',
            name='location',
            field=models.ForeignKey(db_column='location_id', on_delete=django.db.models.deletion.CASCADE, related_name='pending_allocations', to='inventory.location'),
        ),
        migrations.AddField(
            model_name='pendingallocation',
            name='order',
            field=models.ForeignKey(blank=True, db_column='order_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pending_allocations', to='orders.order'),
        ),
        migrations.AddField(
            model_name='pendingallocation',
            name='work_order',
            field=models.ForeignKey(blank=True, db_column='work_order_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pending_allocations', to='jobs.workorder'),
        ),
        migrations.AddIndex(
            model_name='inventorylayer',
            index=models.Index(fields=['item', 'location', 'received_at'], name='idx_layer_fifo_lookup'),
        ),
        migrations.AddIndex(
            model_name='inventorylayer',
            index=models.Index(fields=['item'], name='idx_layer_item'),
        ),
        migrations.AddIndex(
            model_name='inventorylayer',
            index=models.Index(fields=['location'], name='idx_layer_location'),
        ),
        migrations.AddIndex(
            model_name='inventorylayer',
            index=models.Index(fields=['received_at'], name='idx_layer_received'),
        ),
        migrations.AddIndex(
            model_name='pendingallocation',
            index=models.Index(fields=['item', 'status'], name='idx_pending_item_status'),
        ),
        migrations.AddIndex(
            model_name='pendingallocation',
            index=models.Index(fields=['work_order'], name='idx_pending_wo'),
        ),
        migrations.AddIndex(
            model_name='pendingallocation',
            index=models.Index(fields=['status'], name='idx_pending_status'),
        ),
        migrations.AddIndex(
            model_name='pendingallocation',
            index=models.Index(fields=['created_at'], name='idx_pending_created'),
        ),
    ]
